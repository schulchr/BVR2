package com.example.bvr;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import android.opengl.GLSurfaceView;

public class GridRenderer {
	Matrix matrices = new Matrix();
	Handles handles = new Handles();
	GridState gridState = new GridState();
	TouchEventVariables eventVars = new TouchEventVariables();
	
	//References to the activity and the surface view
	private static GridActivity mGridActivity;
	private final GLSurfaceView mGlSurfaceView;
		
	/** Used for debug logs. */
	private static final String TAG = "GridRenderer";
		
	/** Additional info for cube generation. */
	private int mLastRequestedCubeFactor;
	private int mActualCubeFactor;	
	/** Control whether vertex buffer objects or client-side memory will be used for rendering. */
	private boolean mUseVBOs = true;		
	/** Control whether strides will be used. */
	private boolean mUseStride = true;	
	/** Size of the position data in elements. */
	static final int POSITION_DATA_SIZE = 3;		
	/** Size of the normal data in elements. */
	static final int NORMAL_DATA_SIZE = 3;	
	/** Size of the texture coordinate data in elements. */
	static final int TEXTURE_COORDINATE_DATA_SIZE = 2;	
	/** How many bytes per float. */
	static final int BYTES_PER_FLOAT = 4;		
	/** The current cubes object. */
	private Cubes mCubes;	
	/** Thread executor for generating cube data in the background. */
	private final ExecutorService mSingleThreadedExecutor = Executors.newSingleThreadExecutor();

	
	
	/** Filename of data to be read in */
	private static String mFilename;
	

	
	/**
	 * values that are passed into the shader
	 */
	private static float mAlpha = 1.0f;
	private static float mMin = 0.0f;
	private static float mMax = 1.0f;
	private static float mSteps = 100.0f;
	private static float mDist  = 100.0f;
	private static float mZoom = 1.0f;
	private static float mLight = 0.0f;

	
	
	
	public GridRenderer(final GridActivity gridActivity, final GLSurfaceView glSurfaceView) {
		mGridActivity = gridActivity;	
		mGlSurfaceView = glSurfaceView;
	}
}
