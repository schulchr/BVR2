package com.example.bvr;

import android.app.Activity;
import android.app.ActivityManager;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ConfigurationInfo;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.CheckBox;
import android.widget.RadioButton;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.Toast;

import com.example.bvr.R;

public class GridActivity extends Activity {
	/** Hold a reference to our GLSurfaceView */
	private GridGLSurfaceView mGLSurfaceView;
	private GridRenderer mRenderer;
	private String filename;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_grid);
		Intent intent = getIntent();
		
		mGLSurfaceView = (GridGLSurfaceView) findViewById(R.id.gl_surface_view);
		
		// Request an OpenGL ES 2.0 compatible context.
		mGLSurfaceView.setEGLContextClientVersion(2);

		final DisplayMetrics displayMetrics = new DisplayMetrics();
		getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);

		// Set the renderer to our demo renderer, defined below.
		mRenderer = new GridRenderer(this, mGLSurfaceView);
		mGLSurfaceView.setRenderer(mRenderer, displayMetrics.density);
		mRenderer.setFilename(intent.getStringExtra(MainActivity.EXTRA_MESSAGE));
	}

	@Override
	protected void onResume() {
		// The activity must call the GL surface view's onResume() on activity
		// onResume().
		super.onResume();
		mGLSurfaceView.onResume();
	}

	@Override
	protected void onPause() {
		// The activity must call the GL surface view's onPause() on activity
		// onPause().
		super.onPause();
		mGLSurfaceView.onPause();
	}
	
	public void radioClick(View v)
	{
		boolean checked = ((RadioButton) v).isChecked();
		
		switch(v.getId()){
			case R.id.alphaButton:
				if(checked){
					findViewById(R.id.rotateButton).setSelected(false);
					findViewById(R.id.alphaButton).setSelected(true);
					findViewById(R.id.stepSizeButton).setSelected(false);
					findViewById(R.id.numStepsButton).setSelected(false);
					findViewById(R.id.minButton).setSelected(false);
					findViewById(R.id.maxButton).setSelected(false);
					
				}				
				break;
			case R.id.stepSizeButton:
				if(checked){
					
				}				
				break;
			case R.id.rotateButton:
				if(checked){
					
				}				
				break;
			case R.id.numStepsButton:
				if(checked){
					
				}				
				break;
			case R.id.minButton:
				if(checked){
					
				}				
				break;
			case R.id.maxButton:
				if(checked){
					
				}				
				break;
		}
	}
}